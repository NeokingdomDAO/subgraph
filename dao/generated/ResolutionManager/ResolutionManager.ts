// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class DelegateLostVotingPower extends ethereum.Event {
  get params(): DelegateLostVotingPower__Params {
    return new DelegateLostVotingPower__Params(this);
  }
}

export class DelegateLostVotingPower__Params {
  _event: DelegateLostVotingPower;

  constructor(event: DelegateLostVotingPower) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get resolutionId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class ResolutionApproved extends ethereum.Event {
  get params(): ResolutionApproved__Params {
    return new ResolutionApproved__Params(this);
  }
}

export class ResolutionApproved__Params {
  _event: ResolutionApproved;

  constructor(event: ResolutionApproved) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get resolutionId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ResolutionCreated extends ethereum.Event {
  get params(): ResolutionCreated__Params {
    return new ResolutionCreated__Params(this);
  }
}

export class ResolutionCreated__Params {
  _event: ResolutionCreated;

  constructor(event: ResolutionCreated) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get resolutionId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ResolutionExecuted extends ethereum.Event {
  get params(): ResolutionExecuted__Params {
    return new ResolutionExecuted__Params(this);
  }
}

export class ResolutionExecuted__Params {
  _event: ResolutionExecuted;

  constructor(event: ResolutionExecuted) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get resolutionId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ResolutionTypeCreated extends ethereum.Event {
  get params(): ResolutionTypeCreated__Params {
    return new ResolutionTypeCreated__Params(this);
  }
}

export class ResolutionTypeCreated__Params {
  _event: ResolutionTypeCreated;

  constructor(event: ResolutionTypeCreated) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get typeIndex(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ResolutionUpdated extends ethereum.Event {
  get params(): ResolutionUpdated__Params {
    return new ResolutionUpdated__Params(this);
  }
}

export class ResolutionUpdated__Params {
  _event: ResolutionUpdated;

  constructor(event: ResolutionUpdated) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get resolutionId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ResolutionVoted extends ethereum.Event {
  get params(): ResolutionVoted__Params {
    return new ResolutionVoted__Params(this);
  }
}

export class ResolutionVoted__Params {
  _event: ResolutionVoted;

  constructor(event: ResolutionVoted) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get resolutionId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get votingPower(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get isYes(): boolean {
    return this._event.parameters[3].value.toBoolean();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class ResolutionManager__getExecutionDetailsResult {
  value0: Array<Address>;
  value1: Array<Bytes>;

  constructor(value0: Array<Address>, value1: Array<Bytes>) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddressArray(this.value0));
    map.set("value1", ethereum.Value.fromBytesArray(this.value1));
    return map;
  }
}

export class ResolutionManager__getVoterVoteResult {
  value0: boolean;
  value1: boolean;
  value2: BigInt;

  constructor(value0: boolean, value1: boolean, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBoolean(this.value0));
    map.set("value1", ethereum.Value.fromBoolean(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }
}

export class ResolutionManager__resolutionTypesResult {
  value0: string;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: boolean;

  constructor(
    value0: string,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: boolean
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromBoolean(this.value4));
    return map;
  }
}

export class ResolutionManager__resolutionsResult {
  value0: string;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;
  value5: boolean;
  value6: BigInt;

  constructor(
    value0: string,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt,
    value5: boolean,
    value6: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromBoolean(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    return map;
  }
}

export class ResolutionManager extends ethereum.SmartContract {
  static bind(address: Address): ResolutionManager {
    return new ResolutionManager("ResolutionManager", address);
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  createResolution(
    dataURI: string,
    resolutionTypeId: BigInt,
    isNegative: boolean,
    executionTo: Array<Address>,
    executionData: Array<Bytes>
  ): BigInt {
    let result = super.call(
      "createResolution",
      "createResolution(string,uint256,bool,address[],bytes[]):(uint256)",
      [
        ethereum.Value.fromString(dataURI),
        ethereum.Value.fromUnsignedBigInt(resolutionTypeId),
        ethereum.Value.fromBoolean(isNegative),
        ethereum.Value.fromAddressArray(executionTo),
        ethereum.Value.fromBytesArray(executionData)
      ]
    );

    return result[0].toBigInt();
  }

  try_createResolution(
    dataURI: string,
    resolutionTypeId: BigInt,
    isNegative: boolean,
    executionTo: Array<Address>,
    executionData: Array<Bytes>
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "createResolution",
      "createResolution(string,uint256,bool,address[],bytes[]):(uint256)",
      [
        ethereum.Value.fromString(dataURI),
        ethereum.Value.fromUnsignedBigInt(resolutionTypeId),
        ethereum.Value.fromBoolean(isNegative),
        ethereum.Value.fromAddressArray(executionTo),
        ethereum.Value.fromBytesArray(executionData)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getExecutionDetails(
    resolutionId: BigInt
  ): ResolutionManager__getExecutionDetailsResult {
    let result = super.call(
      "getExecutionDetails",
      "getExecutionDetails(uint256):(address[],bytes[])",
      [ethereum.Value.fromUnsignedBigInt(resolutionId)]
    );

    return new ResolutionManager__getExecutionDetailsResult(
      result[0].toAddressArray(),
      result[1].toBytesArray()
    );
  }

  try_getExecutionDetails(
    resolutionId: BigInt
  ): ethereum.CallResult<ResolutionManager__getExecutionDetailsResult> {
    let result = super.tryCall(
      "getExecutionDetails",
      "getExecutionDetails(uint256):(address[],bytes[])",
      [ethereum.Value.fromUnsignedBigInt(resolutionId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new ResolutionManager__getExecutionDetailsResult(
        value[0].toAddressArray(),
        value[1].toBytesArray()
      )
    );
  }

  getResolutionResult(resolutionId: BigInt): boolean {
    let result = super.call(
      "getResolutionResult",
      "getResolutionResult(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(resolutionId)]
    );

    return result[0].toBoolean();
  }

  try_getResolutionResult(resolutionId: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "getResolutionResult",
      "getResolutionResult(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(resolutionId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getVoterVote(
    resolutionId: BigInt,
    voter: Address
  ): ResolutionManager__getVoterVoteResult {
    let result = super.call(
      "getVoterVote",
      "getVoterVote(uint256,address):(bool,bool,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(resolutionId),
        ethereum.Value.fromAddress(voter)
      ]
    );

    return new ResolutionManager__getVoterVoteResult(
      result[0].toBoolean(),
      result[1].toBoolean(),
      result[2].toBigInt()
    );
  }

  try_getVoterVote(
    resolutionId: BigInt,
    voter: Address
  ): ethereum.CallResult<ResolutionManager__getVoterVoteResult> {
    let result = super.tryCall(
      "getVoterVote",
      "getVoterVote(uint256,address):(bool,bool,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(resolutionId),
        ethereum.Value.fromAddress(voter)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new ResolutionManager__getVoterVoteResult(
        value[0].toBoolean(),
        value[1].toBoolean(),
        value[2].toBigInt()
      )
    );
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  resolutionTypes(param0: BigInt): ResolutionManager__resolutionTypesResult {
    let result = super.call(
      "resolutionTypes",
      "resolutionTypes(uint256):(string,uint256,uint256,uint256,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new ResolutionManager__resolutionTypesResult(
      result[0].toString(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBoolean()
    );
  }

  try_resolutionTypes(
    param0: BigInt
  ): ethereum.CallResult<ResolutionManager__resolutionTypesResult> {
    let result = super.tryCall(
      "resolutionTypes",
      "resolutionTypes(uint256):(string,uint256,uint256,uint256,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new ResolutionManager__resolutionTypesResult(
        value[0].toString(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBoolean()
      )
    );
  }

  resolutions(param0: BigInt): ResolutionManager__resolutionsResult {
    let result = super.call(
      "resolutions",
      "resolutions(uint256):(string,uint256,uint256,uint256,uint256,bool,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new ResolutionManager__resolutionsResult(
      result[0].toString(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBoolean(),
      result[6].toBigInt()
    );
  }

  try_resolutions(
    param0: BigInt
  ): ethereum.CallResult<ResolutionManager__resolutionsResult> {
    let result = super.tryCall(
      "resolutions",
      "resolutions(uint256):(string,uint256,uint256,uint256,uint256,bool,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new ResolutionManager__resolutionsResult(
        value[0].toString(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBoolean(),
        value[6].toBigInt()
      )
    );
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddResolutionTypeCall extends ethereum.Call {
  get inputs(): AddResolutionTypeCall__Inputs {
    return new AddResolutionTypeCall__Inputs(this);
  }

  get outputs(): AddResolutionTypeCall__Outputs {
    return new AddResolutionTypeCall__Outputs(this);
  }
}

export class AddResolutionTypeCall__Inputs {
  _call: AddResolutionTypeCall;

  constructor(call: AddResolutionTypeCall) {
    this._call = call;
  }

  get name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get quorum(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get noticePeriod(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get votingPeriod(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get canBeNegative(): boolean {
    return this._call.inputValues[4].value.toBoolean();
  }
}

export class AddResolutionTypeCall__Outputs {
  _call: AddResolutionTypeCall;

  constructor(call: AddResolutionTypeCall) {
    this._call = call;
  }
}

export class ApproveResolutionCall extends ethereum.Call {
  get inputs(): ApproveResolutionCall__Inputs {
    return new ApproveResolutionCall__Inputs(this);
  }

  get outputs(): ApproveResolutionCall__Outputs {
    return new ApproveResolutionCall__Outputs(this);
  }
}

export class ApproveResolutionCall__Inputs {
  _call: ApproveResolutionCall;

  constructor(call: ApproveResolutionCall) {
    this._call = call;
  }

  get resolutionId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ApproveResolutionCall__Outputs {
  _call: ApproveResolutionCall;

  constructor(call: ApproveResolutionCall) {
    this._call = call;
  }
}

export class CreateResolutionCall extends ethereum.Call {
  get inputs(): CreateResolutionCall__Inputs {
    return new CreateResolutionCall__Inputs(this);
  }

  get outputs(): CreateResolutionCall__Outputs {
    return new CreateResolutionCall__Outputs(this);
  }
}

export class CreateResolutionCall__Inputs {
  _call: CreateResolutionCall;

  constructor(call: CreateResolutionCall) {
    this._call = call;
  }

  get dataURI(): string {
    return this._call.inputValues[0].value.toString();
  }

  get resolutionTypeId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get isNegative(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }

  get executionTo(): Array<Address> {
    return this._call.inputValues[3].value.toAddressArray();
  }

  get executionData(): Array<Bytes> {
    return this._call.inputValues[4].value.toBytesArray();
  }
}

export class CreateResolutionCall__Outputs {
  _call: CreateResolutionCall;

  constructor(call: CreateResolutionCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class ExecuteResolutionCall extends ethereum.Call {
  get inputs(): ExecuteResolutionCall__Inputs {
    return new ExecuteResolutionCall__Inputs(this);
  }

  get outputs(): ExecuteResolutionCall__Outputs {
    return new ExecuteResolutionCall__Outputs(this);
  }
}

export class ExecuteResolutionCall__Inputs {
  _call: ExecuteResolutionCall;

  constructor(call: ExecuteResolutionCall) {
    this._call = call;
  }

  get resolutionId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ExecuteResolutionCall__Outputs {
  _call: ExecuteResolutionCall;

  constructor(call: ExecuteResolutionCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get shareholderRegistry(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get telediskoToken(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get voting(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class SetShareholderRegistryCall extends ethereum.Call {
  get inputs(): SetShareholderRegistryCall__Inputs {
    return new SetShareholderRegistryCall__Inputs(this);
  }

  get outputs(): SetShareholderRegistryCall__Outputs {
    return new SetShareholderRegistryCall__Outputs(this);
  }
}

export class SetShareholderRegistryCall__Inputs {
  _call: SetShareholderRegistryCall;

  constructor(call: SetShareholderRegistryCall) {
    this._call = call;
  }

  get shareholderRegistry(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetShareholderRegistryCall__Outputs {
  _call: SetShareholderRegistryCall;

  constructor(call: SetShareholderRegistryCall) {
    this._call = call;
  }
}

export class SetTelediskoTokenCall extends ethereum.Call {
  get inputs(): SetTelediskoTokenCall__Inputs {
    return new SetTelediskoTokenCall__Inputs(this);
  }

  get outputs(): SetTelediskoTokenCall__Outputs {
    return new SetTelediskoTokenCall__Outputs(this);
  }
}

export class SetTelediskoTokenCall__Inputs {
  _call: SetTelediskoTokenCall;

  constructor(call: SetTelediskoTokenCall) {
    this._call = call;
  }

  get telediskoToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetTelediskoTokenCall__Outputs {
  _call: SetTelediskoTokenCall;

  constructor(call: SetTelediskoTokenCall) {
    this._call = call;
  }
}

export class SetVotingCall extends ethereum.Call {
  get inputs(): SetVotingCall__Inputs {
    return new SetVotingCall__Inputs(this);
  }

  get outputs(): SetVotingCall__Outputs {
    return new SetVotingCall__Outputs(this);
  }
}

export class SetVotingCall__Inputs {
  _call: SetVotingCall;

  constructor(call: SetVotingCall) {
    this._call = call;
  }

  get voting(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetVotingCall__Outputs {
  _call: SetVotingCall;

  constructor(call: SetVotingCall) {
    this._call = call;
  }
}

export class UpdateResolutionCall extends ethereum.Call {
  get inputs(): UpdateResolutionCall__Inputs {
    return new UpdateResolutionCall__Inputs(this);
  }

  get outputs(): UpdateResolutionCall__Outputs {
    return new UpdateResolutionCall__Outputs(this);
  }
}

export class UpdateResolutionCall__Inputs {
  _call: UpdateResolutionCall;

  constructor(call: UpdateResolutionCall) {
    this._call = call;
  }

  get resolutionId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get dataURI(): string {
    return this._call.inputValues[1].value.toString();
  }

  get resolutionTypeId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get isNegative(): boolean {
    return this._call.inputValues[3].value.toBoolean();
  }

  get executionTo(): Array<Address> {
    return this._call.inputValues[4].value.toAddressArray();
  }

  get executionData(): Array<Bytes> {
    return this._call.inputValues[5].value.toBytesArray();
  }
}

export class UpdateResolutionCall__Outputs {
  _call: UpdateResolutionCall;

  constructor(call: UpdateResolutionCall) {
    this._call = call;
  }
}

export class VoteCall extends ethereum.Call {
  get inputs(): VoteCall__Inputs {
    return new VoteCall__Inputs(this);
  }

  get outputs(): VoteCall__Outputs {
    return new VoteCall__Outputs(this);
  }
}

export class VoteCall__Inputs {
  _call: VoteCall;

  constructor(call: VoteCall) {
    this._call = call;
  }

  get resolutionId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get isYes(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class VoteCall__Outputs {
  _call: VoteCall;

  constructor(call: VoteCall) {
    this._call = call;
  }
}
