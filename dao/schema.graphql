type ResolutionVoter @entity {
  id: ID!
  votingPower: BigInt!
  address: Bytes!
  hasVoted: Boolean!
  hasVotedYes: Boolean!
  delegated: Bytes!
}

type ResolutionType @entity {
  id: ID!
  name: String!
  quorum: BigInt!
  noticePeriod: BigInt!
  votingPeriod: BigInt!
  canBeNegative: Boolean!
}

type Resolution @entity {
  id: ID!
  snapshotId: BigInt!
  ipfsDataURI: String!
  title: String!
  content: String!
  isNegative: Boolean!
  yesVotesTotal: BigInt
  resolutionType: ResolutionType!
  createTimestamp: BigInt!
  updateTimestamp: BigInt
  approveTimestamp: BigInt
  rejectTimestamp: BigInt
  createBy: Bytes!
  updateBy: Bytes
  approveBy: Bytes
  rejectBy: Bytes
  voters: [ResolutionVoter!]
  hasQuorum: Boolean
  executionTo: [Bytes!]!
  executionData: [Bytes!]!
  executionTimestamp: BigInt
  addressedContributor: Bytes
  totalVotingPower: BigInt
}

type DelegationUser @entity {
  id: ID!
  address: Bytes!
  delegated: Bytes!
}

type Offer @entity {
  id: ID!
  from: Bytes!
  amount: BigInt!
  expirationTimestamp: BigInt!
  createTimestamp: BigInt!

  expiredOnTransfer: Boolean!
}

type DaoUser @entity {
  id: ID!
  address: Bytes!

  governanceBalance: BigInt!
  governanceOfferedTempBalance: BigInt!
  governanceVestingBalance: BigInt!
  governanceVaultedBalance: BigInt!
  governanceWithdrawableTempBalance: BigInt!
  votingPower: BigInt!
  shareholderRegistryBalance: BigInt!
  neokigdomTokenBalance: BigInt!

  activeOffers: [Offer!]!
}

type DaoManager @entity {
  id: ID!
  contributorsAddresses: [Bytes!]!
  managingBoardAddresses: [Bytes!]!
  shareholdersAddresses: [Bytes!]!
  investorsAddresses: [Bytes!]!
  resolutionTypes: [ResolutionType!]!

  totalVotingPower: BigInt!
}

type TokenMinting @entity {
  id: ID! # blockNumber
  amounts: [BigInt!]!
  mintedTimestamp: BigInt!
}
